parameters:

- name: automatedTestSet
  type: object
  default: []

- name: variableGroup
  type: string

jobs:
- ${{ each testSet in parameters.automatedTestSet }}:
  - deployment: 'AutoTest${{ testSet.name }}'
    displayName: 'Automated Testing - ${{ testSet.name }}'
    dependsOn: 'Deployment'
    timeoutInMinutes: 600
    pool:
      vmImage: 'windows-latest'
    environment: 'TST'
    variables:
    - group: ${{ parameters.variableGroup }}
    strategy:
      runOnce:
        deploy:
          steps:
          - task: PowerShell@2
            displayName: 'Update AppSettings.config'
            inputs:
              filePath: '$(Agent.BuildDirectory)/SampleSolution/Scripts/UpdateAppSettings.ps1'
              arguments: '-url "$(Url)" -username "$(Username)" -password "$(Password)" -languageOverride "$(LanguageOverride)" -appsettingsPath "$(Agent.BuildDirectory)/SampleSolution/SpecFlow/appsettings.config"'
  
          - task: VSTest@2
            displayName: 'Run SpecFlow Tests - ${{ testSet.name }}'
            continueOnError: true
            inputs:
              testSelector: 'testAssemblies'
              testAssemblyVer2: '**\Vermaat.Crm.SpecFlow.Sample.dll'
              searchFolder: '$(Agent.BuildDirectory)/SampleSolution/SpecFlow'
              runSettingsFile: '$(Agent.BuildDirectory)/SampleSolution/SpecFlow/${{ testSet.name }}.runsettings'
              testRunTitle: 'SpecFlow_${{ testSet.name }}'
              diagnosticsEnabled: true
              testFiltercriteria: '${{ testSet.filter }}'
    
          - task: PowerShell@2
            displayName: 'Add Screenshots to ${{ testSet.name }} Test Results'
            inputs:
              filePath: '$(Agent.BuildDirectory)/SampleSolution/Scripts/AddScreenshotsToTestResults.ps1'
              arguments: '-isRelease $false -testRunTitle "SpecFlow_${{ testSet.name }}"'
            env:
              SYSTEM_ACCESSTOKEN: $(System.AccessToken)