name: $(Major).$(Minor)$(Rev:.r)

variables:
- group: Versioning
- name: 'System.Debug'
  value: 'true'

stages:
- stage: Build
  displayName: 'Build Stage'
  jobs:
    - job: Build
      displayName: 'Build Sample Solution'
      pool:
        vmImage: 'windows-latest'
      variables:
      - name: BuildPlatform
        value: 'Any CPU'
      - name: BuildConfiguration
        value: 'Release'

      steps:
      - checkout: self
        clean: true
        persistCredentials: true

      - task: PowerShell@2
        inputs:
          filePath: 'Deployment/Scripts/CreateAppSettings.ps1'
          arguments: '-outputPath "$(system.defaultworkingdirectory)\Vermaat.Crm.Specflow.Sample\appsettings.config"'
      
      - template: 'Template_Build.yml'
        parameters:
          solutions: '**\\*.sln'
      
      - task: PowerShell@2
        inputs:
          filePath: 'Deployment/Scripts/FindSpecRunFolder.ps1'
          arguments: '-packageDirectory "$(system.defaultworkingdirectory)\packages"'
      
      - task: CopyFiles@2
        displayName: 'Copy Sample Project'
        inputs:
          SourceFolder: '$(system.defaultworkingdirectory)'
          Contents: '**\Vermaat.Crm.Specflow.Sample\bin\$(BuildConfiguration)\**'
          TargetFolder: '$(build.artifactstagingdirectory)\SpecFlow'
          flattenFolders: true
      
      - task: CopyFiles@2
        displayName: 'Copy Solution File'
        inputs:
          SourceFolder: '$(system.defaultworkingdirectory)\Deployment\Solutions'
          Contents: '**'
          TargetFolder: '$(build.artifactstagingdirectory)\Solution'
      
      - task: CopyFiles@2
        displayName: 'Copy SpecRun'
        inputs:
          SourceFolder: '$(SpecRunFolder)\tools'
          TargetFolder: '$(build.artifactstagingdirectory)\SpecFlow\SpecFlowPlusRunner'
      
      - task: CopyFiles@2
        displayName: 'Copy Scripts'
        inputs:
          SourceFolder: '$(system.defaultworkingdirectory)\Deployment\Scripts'
          TargetFolder: '$(build.artifactstagingdirectory)\Scripts'

      - task: CopyFiles@2
        displayName: 'Copy Data'
        inputs:
          SourceFolder: '$(system.defaultworkingdirectory)\Deployment\Data'
          TargetFolder: '$(build.artifactstagingdirectory)\Data'
      
      - task: SpecFlowPlus@0
        displayName: 'SpecFlow+ Documentation'
        inputs:
          projectFilePath: Vermaat.Crm.Specflow.Sample/Vermaat.Crm.Specflow.Sample.csproj
          projectName: 'SpecFlow Demo'
          projectLanguage: en
      
      - task: PublishBuildArtifacts@1
        displayName: 'Publish Artifact'
        inputs:
          PathtoPublish: '$(build.artifactstagingdirectory)'
          ArtifactName: SampleSolution

- stage: Deploy
  displayName: 'Deployment Stage'
  jobs:
  - deployment: 'Deployment'
    displayName: 'Deploy Sample Solution'
    timeoutInMinutes: 600
    pool:
      vmImage: 'windows-latest'
    variables:
    - group: 'TST - New'
    environment: 'TST'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: MSCRMToolInstaller@12
            displayName: 'MSCRM Tool Installer'
          
          - task: MSCRMPackSolution@12
            displayName: 'Pack SpecFlowDemo'
            inputs:
              crmSdkVersion: '9.0.0'
              unpackedFilesFolder: '$(Agent.BuildDirectory)/SampleSolution/Solution/SpecFlowDemo'
              mappingFile: '$(Agent.BuildDirectory)/SampleSolution/Solution/EmptyMapping.xml'
              packageType: 'Managed'
              outputPath: '$(Agent.BuildDirectory)/SampleSolution/Solution'

          - task: MSCRMImportSolution@12
            displayName: 'Import SpecFlowDemo'
            inputs:
              crmConnectionString: 'Url=$(Url);AuthType=$(AuthType);ClientId=$(ClientId);ClientSecret=$(ClientSecret)'
              solutionFile: '$(Agent.BuildDirectory)/SampleSolution/Solution/SpecFlowDemo_managed.zip'
              publishWorkflows: true
              overwriteUnmanagedCustomizations: true
              holdingSolution: true

          - task: MSCRMApplySolution@12
            displayName: 'Apply SpecFlowDemo'
            inputs:
              crmConnectionString: 'Url=$(Url);AuthType=$(AuthType);ClientId=$(ClientId);ClientSecret=$(ClientSecret)'
              solutionName: 'SpecFlowDemo'
              useAsyncMode: true

          - task: MSCRMImportCMData@12
            inputs:
              crmConnectionString: 'Url=$(Url);AuthType=$(AuthType);ClientId=$(ClientId);ClientSecret=$(ClientSecret)'
              dataFile: '$(Agent.BuildDirectory)/SampleSolution/Data/CMData.zip'

          - task: PowerShell@2
            displayName: 'Update AppSettings.config'
            inputs:
              filePath: '$(Agent.BuildDirectory)/SampleSolution/Scripts/UpdateAppSettings.ps1'
              arguments: '-url $(Url) -username $(Username) -password $(Password) -clientId $(ClientId) -clientSecret $(ClientSecret) -authType $(AuthType) -appsettingsPath "$(Agent.BuildDirectory)/SampleSolution/SpecFlow/appsettings.config"'

          - task: CopyFiles@2
            displayName: 'Copy Data'
            inputs:
              SourceFolder: '$(Agent.BuildDirectory)/SampleSolution'
              TargetFolder: '$(build.artifactstagingdirectory)\Data'
      
          - task: PublishBuildArtifacts@1
            displayName: 'Publish Artifact'
            inputs:
              PathtoPublish: '$(build.artifactstagingdirectory)'
              ArtifactName: Temp

          - task: VSTest@2
            displayName: 'Run SpecFlow Tests - API'
            continueOnError: true
            inputs:
              testSelector: 'testAssemblies'
              testAssemblyVer2: '**\Vermaat.Crm.SpecFlow.Sample.dll'
              searchFolder: '$(Agent.BuildDirectory)/SampleSolution/SpecFlow'
              runSettingsFile: '$(Agent.BuildDirectory)/SampleSolution/SpecFlow/API.runsettings'
              testRunTitle: 'SpecFlow_API'
              diagnosticsEnabled: true

          - task: PowerShell@2
            displayName: 'Add Screenshots to API Test Results'
            inputs:
              filePath: '$(Agent.BuildDirectory)/SampleSolution/Scripts/AddScreenshotsToTestResults.ps1'
              arguments: '-isRelease $false -testRunTitle "SpecFlow_API"'
            env:
              SYSTEM_ACCESSTOKEN: $(System.AccessToken)
          
          - task: VSTest@2
            displayName: 'Run SpecFlow Tests - Chrome'
            continueOnError: true
            inputs:
              testSelector: 'testAssemblies'
              testAssemblyVer2: '**\Vermaat.Crm.SpecFlow.Sample.dll'
              searchFolder: '$(Agent.BuildDirectory)/SampleSolution/SpecFlow'
              runSettingsFile: '$(Agent.BuildDirectory)/SampleSolution/SpecFlow/Chrome.runsettings'
              testRunTitle: 'SpecFlow_Chrome'
              diagnosticsEnabled: true

          - task: PowerShell@2
            displayName: 'Add Screenshots to Chrome Test Results'
            inputs:
              filePath: '$(Agent.BuildDirectory)/SampleSolution/Scripts/AddScreenshotsToTestResults.ps1'
              arguments: '-isRelease $false -testRunTitle "SpecFlow_Chrome"'
            env:
              SYSTEM_ACCESSTOKEN: $(System.AccessToken)

          - task: VSTest@2
            displayName: 'Run SpecFlow Tests - Firefox'
            continueOnError: true
            inputs:
              testSelector: 'testAssemblies'
              testAssemblyVer2: '**\Vermaat.Crm.SpecFlow.Sample.dll'
              searchFolder: '$(Agent.BuildDirectory)/SampleSolution/SpecFlow'
              runSettingsFile: '$(Agent.BuildDirectory)/SampleSolution/SpecFlow/Firefox.runsettings'
              testRunTitle: 'SpecFlow_Firefox'
              diagnosticsEnabled: true

          - task: PowerShell@2
            displayName: 'Add Screenshots to Firefox Test Results'
            inputs:
              filePath: '$(Agent.BuildDirectory)/SampleSolution/Scripts/AddScreenshotsToTestResults.ps1'
              arguments: '-isRelease $false -testRunTitle "SpecFlow_Firefox"'
            env:
              SYSTEM_ACCESSTOKEN: $(System.AccessToken)
